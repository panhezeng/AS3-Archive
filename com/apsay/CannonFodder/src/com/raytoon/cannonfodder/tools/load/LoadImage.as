///////////////////////////////////////////////////////////
//  LoadImage.as
//  Macromedia ActionScript Implementation of the Class LoadImage
//  Generated by Enterprise Architect
//  Created on:      22-八月-2011 11:34:10
//  Original author: LuXianli
///////////////////////////////////////////////////////////

package com.raytoon.cannonfodder.tools.load
{
	import com.raytoon.cannonfodder.tools.net.ConstPath;
	import flash.display.Bitmap;
	import flash.display.Loader;
	import flash.display.Sprite;
	import flash.events.Event;
	import flash.events.IOErrorEvent;
	import flash.events.SecurityErrorEvent;
	import flash.net.URLRequest;
	/**
	 * @author LuXianli
	 * @version 1.0
	 * @created 22-八月-2011 11:34:10
	 */
	public class LoadImage extends Sprite
	{
		private var _imgUrl:String;
		private var _imgName:String;
		private var _imgLoad:Loader;
		public function LoadImage(imgName:String){
			
			_imgLoad = new Loader();
			_imgLoad.contentLoaderInfo.addEventListener(Event.COMPLETE, imgLoadComplete);
			_imgLoad.contentLoaderInfo.addEventListener(IOErrorEvent.IO_ERROR, imgLoadIOEror);
			_imgLoad.contentLoaderInfo.addEventListener(SecurityErrorEvent.SECURITY_ERROR, imgLoadSecurityError);
			
			_imgUrl = ConstPath.MATERIAL_PATH + ConstPath.PNG_PATH + imgName;
			_imgLoad.load(new URLRequest(_imgUrl));
			addChild(_imgLoad);
		}
		
		private function imgLoadComplete(event:Event):void {
			
		}
		
		private function imgLoadIOEror(event:IOErrorEvent):void {
			
		}
		
		private function imgLoadSecurityError(event:SecurityErrorEvent):void {
			
		}
		
		public function clear():void {
			
			removeChild(_imgLoad);
			try {
				(_imgLoad.content as Bitmap).bitmapData.dispose();
			}catch (e:*) {
				
			}
			
			try {
				_imgLoad.unloadAndStop();
			}catch (e:*) {
				
			}
			_imgLoad = null;
		}
	}//end LoadImage

}