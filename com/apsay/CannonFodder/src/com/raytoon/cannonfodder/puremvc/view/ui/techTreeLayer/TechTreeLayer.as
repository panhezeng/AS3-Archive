// /////////////////////////////////////////////////////////
// TechTreeLayer.as
// Macromedia ActionScript Implementation of the Class TechTreeLayer
// Generated by Enterprise Architect
// Created on:      14-九月-2011 16:36:56
// Original author: LuXianli
// /////////////////////////////////////////////////////////
package com.raytoon.cannonfodder.puremvc.view.ui.techTreeLayer
{
	import com.raytoon.cannonfodder.puremvc.model.vo.CannonFodderVO;
	import com.raytoon.cannonfodder.puremvc.view.mediator.techTreeLayerMediator.TechTreeLayerMediator;
	import com.raytoon.cannonfodder.puremvc.view.ui.UIMain;
	import com.raytoon.cannonfodder.tools.utils.GlobalVariable;
	import com.raytoon.cannonfodder.tools.utils.UICommand;
	import com.raytoon.cannonfodder.tools.xml.XMLSource;
	import flash.display.DisplayObject;
	import flash.display.MovieClip;

	import flash.display.Sprite;
	import flash.events.TimerEvent;
	import flash.utils.Timer;
	import flash.utils.getTimer;

	/**
	 * @author LuXianli
	 * @version 1.0
	 * @created 14-九月-2011 16:36:56
	 */
	public class TechTreeLayer extends Sprite
	{
		public static const NAME:String = "TechTreeLayer";
		public var _soldierTechTree:SoldierTechTree = new SoldierTechTree();
		public var _towerTechTree:TowerTechTree = new TowerTechTree();
		private var _techTreeFlag:int = 0;
		public static const SOLDIER_TECH_TREE:String = "SoldierTechTree";
		public static const TOWER_TECH_TREE:String = "TowerTechTree";
		private static var _serverTime:Number = 0;
		private static var _runTime:Number = 0;
		public static var mouseEventFlag:Boolean = true;//科技树鼠标事件标志位
		public static var techRunTimeFlag:Boolean = false;
		private var _title:Object;
		private var _techTreeType:String = SOLDIER_TECH_TREE;
		
		
		public static function set SERVER_NOW_TIME(value:Number):void {
			
			_serverTime = value;
			_runTime = getTimer();
		}
		
		public static function get SERVER_NOW_TIME():Number {
			
			return _serverTime + getTimer() - _runTime;
		}
		
		public function TechTreeLayer()
		{
			UIMain.setInstance(NAME, this);
			_soldierTechTree.name = SOLDIER_TECH_TREE;
			_towerTechTree.name = TOWER_TECH_TREE;
		}

		/**
		 * 显示 指定 科技树
		 * @param	techTreeType  
		 */
		public function showTechTree(techTreeType:String = SOLDIER_TECH_TREE):void
		{
			_techTreeType = techTreeType;
			if(_techTreeFlag == 0 && techTreeType == SOLDIER_TECH_TREE)
			{
				addChild(_soldierTechTree);
				_soldierTechTree.y = GlobalVariable.TECH_PIC_HEIGHT / 2;
				_soldierTechTree.showTechTree();
				_techTreeFlag = 1;
			}
			else if(_techTreeFlag == 0 && techTreeType == TOWER_TECH_TREE)
			{
				addChild(_towerTechTree);
				_towerTechTree.y = GlobalVariable.TECH_PIC_HEIGHT / 2;
				_towerTechTree.showTechTree();
				_techTreeFlag = 2;
			}
			else if(_techTreeFlag == 1 && techTreeType == TOWER_TECH_TREE)
			{
				if (contains(_soldierTechTree))
					removeChild(_soldierTechTree);
				addChild(_towerTechTree);
				_towerTechTree.y = GlobalVariable.TECH_PIC_HEIGHT / 2;
				_towerTechTree.showTechTree();
			}
			else if(_techTreeFlag == 1 && techTreeType == SOLDIER_TECH_TREE)
			{
				if (contains(_towerTechTree))
					removeChild(_towerTechTree);
				addChild(_soldierTechTree);
				_soldierTechTree.y = GlobalVariable.TECH_PIC_HEIGHT / 2;
				_soldierTechTree.showTechTree();
			}
			else if(_techTreeFlag == 2 && techTreeType == TOWER_TECH_TREE)
			{
				if (contains(_soldierTechTree))
					removeChild(_soldierTechTree);
				addChild(_towerTechTree);
				_towerTechTree.y = GlobalVariable.TECH_PIC_HEIGHT / 2;
				_towerTechTree.showTechTree();
			}
			else if(_techTreeFlag == 2 && techTreeType == SOLDIER_TECH_TREE)
			{
				if (contains(_towerTechTree))
					removeChild(_towerTechTree);
				addChild(_soldierTechTree);
				_soldierTechTree.y = GlobalVariable.TECH_PIC_HEIGHT / 2;
				_soldierTechTree.showTechTree();
			}
			if (!_title) {
				
				var _mClass:Class = UICommand.getClass("com.paohui.ui.tech.ListTitle");
				_title = new _mClass();
				_mClass = null;
				addChild(_title as DisplayObject);
			}else {
				addChild(_title as DisplayObject);
			}
		}

		/**
		 * 同步 服务器时间
		 * @param	value  自 1970 年 1 月 1 日午夜（通用时间）以来的毫秒数
		 */
		public function setServerTime(value:Number):void
		{
			SERVER_NOW_TIME = value;
			//var _serverTimer:Timer = new Timer(1000);
			//_serverTimer.addEventListener(TimerEvent.TIMER, serverTimehandler);
			//_serverTimer.start();
		}

		private function serverTimehandler(event:TimerEvent):void
		{
			SERVER_NOW_TIME += 1003;
		}

		/**
		 * 数据更改时检查待激活科技是否科技激活
		 */
		public function checkActivationTerm():void
		{
			var _soldierTechArr:Array = _soldierTechTree.techArr;
			var _soldierTechXml:XML = XMLSource.getXMLSource("SoldierTechTree.xml");
			var _soldierLevelInfo:XML = XMLSource.getXMLSource("SoldierLevelInfo.xml");
			for each (var stMc:MovieClip in _soldierTechArr) {
				
				if (stMc.flag != 0) continue;
				if (stMc.type == "main") {
					var _smULevel:int = int(_soldierLevelInfo.soldierLevel.(@id == stMc.id).level.(@grade == 1).userLevel);
					var _smTask:int = int(_soldierTechXml.tech.techTree.(@id == stMc.id).task);
					if (_smULevel <= CannonFodderVO.userInfo.level && taskComplete(_smTask)) {
						_soldierTechTree.addTech( { "type":stMc.type, "id":stMc.id, "flag":1, "startTime":0, "level":0} );
					}
				}else {
					var _sbULevel:int = int(_soldierLevelInfo.soldierLevel.(@id == stMc.id).level.(@grade == 1).userLevel);
					if (_sbULevel <= CannonFodderVO.userInfo.level) {
						_soldierTechTree.addTech( { "type":stMc.type, "id":stMc.id, "flag":1, "startTime":0, "level":0} );
					}
				}
			}
			
			var _towerTechArr:Array = _towerTechTree.techArr;
			var _towerTechXml:XML = XMLSource.getXMLSource("TowerTechTree.xml");
			var _towerLevelInfo:XML = XMLSource.getXMLSource("TowerLevelInfo.xml");
			for each (var ttMc:MovieClip in _soldierTechArr) {
				
				if (ttMc.flag != 0) continue;
				if (ttMc.type == "main") {
					var _tmULevel:int = int(_soldierLevelInfo.towerType.towerLevel.(@id == ttMc.id).level.(@grade == 1).userLevel);
					var _tmTask:int = int(_towerTechXml.tech.techTree.(@id == ttMc.id).task);
					if (_tmULevel <= CannonFodderVO.userInfo.level && taskComplete(_tmTask)) {
						_towerTechTree.addTech( { "type":ttMc.type, "id":ttMc.id, "flag":1, "startTime":0, "level":0} );
					}
				}else {
					var _tbULevel:int = int(_towerTechXml.towerType.towerLevel.(@id == ttMc.id).level.(@grade == 1).userLevel);
					if (_tbULevel <= CannonFodderVO.userInfo.level) {
						_towerTechTree.addTech( { "type":ttMc.type, "id":ttMc.id, "flag":1, "startTime":0, "level":0} );
					}
				}
			}
			
			_soldierLevelInfo = null;
			_soldierTechArr = null;
			_soldierTechXml = null;
			_towerLevelInfo = null;
			_towerTechArr = null;
			_towerTechXml = null;
		}

		/**
		 * 查看此科技是否可以激活
		 * @param	id
		 * @return
		 */
		private function enableSoliderTech(id:int):Object
		{
			var _soldierTechArr:Array = CannonFodderVO.techTreeInfo.soldierTech as Array;

			for each(var obj:Object in _soldierTechArr)
			{
				if(obj.id == id)
					return obj;
			}

			return null;
		}

		/**
		 * 查看此科技是否可以激活
		 * @param	id
		 * @return
		 */
		private function enableTowerTech(id:int):Object
		{
			var _towerTechArr:Array = CannonFodderVO.techTreeInfo.towerTech as Array;

			for each(var obj:Object in _towerTechArr)
			{
				if(obj.id == id)
					return obj;
			}

			return null;
		}

		/**
		 * 查看此任务是否完成
		 * @param	id
		 * @return
		 */
		private function taskComplete(id:int):Boolean
		{
			var _taskArr:Array = CannonFodderVO.taskInfo.task as Array;

			for each(var obj:Object in _taskArr)
			{
				if(obj.id == id && obj.complete == 1)
					return true;
			}

			return false;
		}

		/**
		 * 需要依赖科技 是否 完成 研发
		 * @param	needTech
		 * @return
		 */
		private function needTechSoldierTrue(needTech:String):Boolean
		{
			var _needTechArr:Array = strToArr(needTech);

			for each(var tech:Array in _needTechArr)
			{
				if(enableSoliderTech(tech[0]))
				{
					if(enableSoliderTech(tech[0]).level < tech[1])
						return false;
				}
				else
				{
					return false;
				}
			}

			return true;
		}

		/**
		 * 需要依赖科技 是否 完成 研发
		 * @param	needTech
		 * @return
		 */
		private function needTechTowerTrue(needTech:String):Boolean
		{
			var _needTechArr:Array = strToArr(needTech);

			for each(var tech:Array in _needTechArr)
			{
				if(enableTowerTech(tech[0]))
				{
					if(enableTowerTech(tech[0]).level < tech[1])
						return false;
				}
				else
				{
					return false;
				}
			}

			return true;
		}

		private function strToArr(s:String):Array
		{
			var a:Array = s.split("||");
			var c:Array = [];
			for(var i:int = 0; i < a.length; i++ )
			{
				var b:Array = a[i].split(",");
				c.push(b);
			}

			return c;
		}
		/**
		 * 
		 * @param	type  并科技/塔科技
		 * @param	id科技id
		 */
		public function updateTechTree(type:String, id:int):void {
			
			if (type == SOLDIER_TECH_TREE) {
				
				if (_soldierTechTree) {
					_soldierTechTree.updateTechTree(id);
				}
			}else {
				
				if (_towerTechTree) {
					_towerTechTree.updateTechTree(id);
				}
			}
		}
		/**
		 * 改变科技树标题显示
		 */
		public function set techTitle(value:String):void {
			
			if (_title)_title.txt.text = value;
		}
		/**
		 * 改变鼠标选中科技样式
		 * @param	obj
		 */
		public function changeSelected(obj:Object):void {
			
			if (_techTreeType == SOLDIER_TECH_TREE) {
				_soldierTechTree.changeSelected(obj);
			}
			else {
				_towerTechTree.changeSelected(obj);
			}
		}
		/**
		 * 检查当前是否有长在研发的科技 有（true）
		 * @return
		 */
		public function searchFlagTwo(techTreeType:String = null):Boolean {
			
			var _tempTechInfoArr:Array;
			
			_tempTechInfoArr = CannonFodderVO.techTreeInfo.soldierTech as Array;
			
			for each (var _sobj:Object in _tempTechInfoArr) {
				
				if (_sobj.flag == 2) return true;
			}
		
			_tempTechInfoArr = CannonFodderVO.techTreeInfo.towerTech as Array;
			
			for each (var _tobj:Object in _tempTechInfoArr) {
				
				if (_tobj.flag == 2) return true;
			}
				
			return false;
		}
		
		public function showTechRunTime():void {
			
			if (_techTreeType == TOWER_TECH_TREE) {
				
				_towerTechTree.showTechRunTime();
			}
			else {
				_soldierTechTree.showTechRunTime();
				
			}
		}
		
		public function clear():void {
			
			if (_techTreeType == TOWER_TECH_TREE) {
				
				_towerTechTree.clear();
			}
			else {
				_soldierTechTree.clear();
				
			}
		}
	}
	// end TechTreeLayer
}