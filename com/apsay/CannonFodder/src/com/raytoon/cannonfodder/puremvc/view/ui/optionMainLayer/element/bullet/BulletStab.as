///////////////////////////////////////////////////////////
//  BulletStab.as
//  Macromedia ActionScript Implementation of the Class BulletStab
//  Generated by Enterprise Architect
//  Created on:      12-七月-2011 15:41:29
//  Original author: LuXianli
///////////////////////////////////////////////////////////

package com.raytoon.cannonfodder.puremvc.view.ui.optionMainLayer.element.bullet
{
	import com.raytoon.cannonfodder.puremvc.view.ui.soundLayer.SoundLayer;
	import com.raytoon.cannonfodder.puremvc.view.ui.UIMain;
	import com.raytoon.cannonfodder.puremvc.view.ui.optionMainLayer.OptionMainLayer;
	import com.raytoon.cannonfodder.puremvc.view.ui.optionMainLayer.element.Element;
	import com.raytoon.cannonfodder.tools.effects.BlitPlayer;
	
	import flash.display.Bitmap;
	import flash.display.BitmapData;
	import flash.display.MovieClip;
	import flash.geom.Point;
	import flash.system.ApplicationDomain;
	
	/**
	 * 地刺类型攻击
	 * @author LuXianli
	 * @version 1.0
	 * @created 12-七月-2011 15:41:29
	 */
	public class BulletStab extends Element
	{
		//子弹射击单位
		private var _shooter:Element;
		//单位发出子弹速度
		private var _bSpeed:int = 15;
		public function set bSpeed(value:int):void {
			_bSpeed = value;
		}
		public function get bSpeed():int {
			return _bSpeed;
		}
		//子弹附加技能
		private var _skills:int = 0;
		public function set skills(value:int):void {
			_skills = value;
		}
		public function get skills():int {
			return _skills;
		}
		private var player:BlitPlayer;
		public function BulletStab(from:Element) {
			super();
			row = 0;
			_shooter = from;
			attack = from.attack;
			//x = from.x;
			//y = from.y;
			
		}
		/**
		 * 清空子弹
		 */
		override public function clear():void 
		{
			
		}
		private var roundFlag:int = 0;
		private var roundLine:int = 0;
		/**
		 * 重新渲染单位
		 */
		override public function rendering():void 
		{
			if (roundFlag == 0) {
				roundFlag = 1;
				checkHurt();
			}
			
			
		}
		/**
		 * 地刺攻击
		 * 碰撞检测，子弹是否击中单位
		 */
		private function checkHurt():void {
			
			var hurtArray:Array = (UIMain.getInstance(OptionMainLayer.NAME) as OptionMainLayer).attackArr;
			
			for each(var element:Element in hurtArray) {
				if (element.moveType == 404) continue;
				if (Point.distance(_shooter.position, element.position) <= _shooter.maxAttackRange && Point.distance(_shooter.position, element.position) >= _shooter.minAttackRange) {
					if (_shooter.viewFlag == 1)
						_shooter.viewUnit.shootBullet();
					showStabMovie(element.position.x,element.position.y);
					element.downHp(attack);
					(UIMain.getInstance(SoundLayer.NAME) as SoundLayer).playSound(element.attackedSound);
					hurtArray = null;
					return;
				}
			}
			attack = 0;
			
		}
		// 地刺 攻击时调用显示 攻击动画=============================================
		
		private var _stabMovie:MovieClip;
		private var _stabClass:Class;
		private var _stabFlag:Boolean = true;
		public function showStabMovie(_x:int,_y:int):void {
			
			if (_stabFlag) {
				_stabFlag = false;
				_stabClass = ApplicationDomain.currentDomain.getDefinition("StabBullet") as Class;
				_stabMovie = new _stabClass() as MovieClip;
				_stabMovie.x = _x;
				_stabMovie.y = _y;
				_stabMovie.addFrameScript(_stabMovie.totalFrames - 1, function():void {_stabMovie.gotoAndStop(1); removeThis();} )
				addChild(_stabMovie);
			}else{
				_stabMovie.play();
			}
		}
	}//end BulletStab

}