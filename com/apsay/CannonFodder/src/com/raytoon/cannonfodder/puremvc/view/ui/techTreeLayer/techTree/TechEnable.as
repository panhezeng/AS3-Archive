///////////////////////////////////////////////////////////
//  TechEnable.as
//  Macromedia ActionScript Implementation of the Class TechEnable
//  Generated by Enterprise Architect
//  Created on:      20-九月-2011 11:40:13
//  Original author: LuXianli
///////////////////////////////////////////////////////////

package com.raytoon.cannonfodder.puremvc.view.ui.techTreeLayer.techTree
{
	import com.raytoon.cannonfodder.tools.utils.NumberFont;
	import com.raytoon.cannonfodder.tools.utils.UICommand;
	import com.raytoon.cannonfodder.tools.xml.XMLSource;
	
	import flash.display.MovieClip;
	import flash.filters.ColorMatrixFilter;
	import flash.geom.Point;
	import flash.system.ApplicationDomain;
	import flash.text.TextField;

	/**
	 * @author LuXianli
	 * @version 1.0
	 * @created 20-九月-2011 11:40:13
	 */
	public dynamic class TechEnable extends MovieClip
	{
		private var _techName:String;
		private var _level:int;
		private var _additionLevel:int;
		private var _techClass:Class;
		private var _techMc:MovieClip;
		private var _nextTechArray:Array = [];
		private var _position:Point;
		private var _techType:String;
		private var _id:int;
		private var _type:String;
		private var _techIcon:MovieClip;
		public function TechEnable(techName:String,level:int,additionLevel:int,techType:String,type:String,id:int){
			
			_techName = techName;
			_level = level;
			_techType = techType;
			_type = type;
			_id = id;
			_additionLevel = additionLevel;
			_techClass = ApplicationDomain.currentDomain.getDefinition(_techName) as Class;
			_techMc = new _techClass() as MovieClip;
			addChild(_techMc);
			_techClass = null;
			
			update();
		}
		/**
		 * 检查当前科技是否可以升级
		 * @param	techType  科技类别 （兵、塔）
		 * @param	type      科技类型 （主科技、从科技）
		 * @param	id        科技id
		 * @param	level     科技当前等级
		 * @return
		 */
		private function checkUpdate(techType:String,type:String,id:int,level:int):Boolean {
			
			var _flag:Boolean = true;
			var _bagArr:Array = UICommand.t.bagData;
			var _techXmlList:XMLList;
			var _money:int = 0;
			var _cap:int = 0;
			var _maID:int = 0;
			var _maSum:int = 0;
			var _mbID:int = 0;
			var _mbSum:int = 0;
			var _userLevel:int = 0;
			var _maxLevel:int = 0;
			var _elementID:int = 0;
			if (techType == "SoldierTechTree.xml") {
				
				_elementID = int(XMLSource.getXMLSource("SoldierTechTree.xml").tech.techTree.(@id == id).enableTech);
				
				if (level + 1 > int(XMLSource.getXMLSource("SoldierInfo.xml").soldier.(@id == _elementID).maxLevel)) return false;
				
				_techXmlList = XMLSource.getXMLSource("SoldierLevelInfo.xml").soldierLevel.(@id == _elementID).level.(@grade == level + 1);
				
			}else {
				_elementID = int(XMLSource.getXMLSource("TowerTechTree.xml").tech.techTree.(@id == id).enableTech)
				
				if (level + 1 > int(XMLSource.getXMLSource("TowerInfo.xml").towerType.tower.(@id == _elementID).maxLevel)) return false;
				
				_techXmlList = XMLSource.getXMLSource("TowerLevelInfo.xml").towerType.towerLevel.(@id == _elementID).level.(@grade == level + 1);
			}
			
			
			
			_money = int(_techXmlList.money);
			if (UICommand.t.userData[1][5] < _money) {
				
				return false;
			}
			
			_cap = int(_techXmlList.cap);
			if (UICommand.t.userData[1][4] < _cap) {
				
				return false;
			}
			
			_userLevel = int(_techXmlList.userLevel);
			if (UICommand.t.userData[1][2] < _userLevel) {
				
				return false;
			}
			
			_maID = int(_techXmlList.materialsA);
			_maSum = int(_techXmlList.materialsumA);
			_mbID = int(_techXmlList.materialsB);
			_mbSum = int(_techXmlList.materialsumB);
			if (_maID > 0) {
				_flag = false;
				for each (var objA:Object in _bagArr[1]) {
					
					if (objA[0] == _maID) {
						_flag = true;
						if (objA[1] < _maSum) {
							return false;
						}
						break;
					}
				}
			}
			
			if (_mbID > 0) {
				_flag = false;
				for each (var objB:Object in _bagArr[1]) {
					
					if (objB[0] == _mbID) {
						_flag = true;
						if (objB[1] < _mbSum) {
							return false;
						}
						break;
					}
				}
			}
			
			return _flag;
		}
		
		public function update():void {
			
			if (_techIcon) {
				_techMc.removeChild(_techIcon);
				_techIcon = null;
			}
			if (!checkUpdate(_techType, _type, _id,_level)) {
				
				var _techLevelClass:Class = ApplicationDomain.currentDomain.getDefinition("TechLevelIcon") as Class;
				_techIcon = new _techLevelClass() as MovieClip;
				_techMc.addChild(_techIcon);
				_techLevelClass = null;
				var _techNum:NumberFont = new NumberFont(String(_level));
				_techIcon.addChild(_techNum);
				_techNum.x = (_techIcon.width - _techNum.width) / 2 - 2;
				_techNum.y = (_techIcon.height - _techNum.height) / 2 - 2;
				if (_additionLevel > 0) {
					_techNum.filters = [new ColorMatrixFilter([  
									1,1,1,1,0,  
									0,0,0,0,0,  
									0,0,0,0,0,  
									0,0,0,1,0  
								])];//大概是红色
				}
				_techNum = null;
			}else {
				
				var _mclass:Class = ApplicationDomain.currentDomain.getDefinition("TechEnableUpLevel") as Class;
				_techIcon = new _mclass() as MovieClip;
				_techMc.addChild(_techIcon);
				_mclass = null;
			}
		}

		public function get position():Point
		{
			return _position;
		}

		public function set position(value:Point):void
		{
			_position = value;
		}

		public function get nextTechArray():Array
		{
			return _nextTechArray;
		}

		public function set nextTechArray(value:Array):void
		{
			_nextTechArray = value;
		}
		
		public function clear():void {
			
			if (_techMc) {
				removeChild(_techMc);
				_techMc = null;
			}
		}
	}//end TechEnable

}