// // // // // // // // ///////////////////////////////////////////
// LevelLayer.as
// Macromedia ActionScript Implementation of the Class LevelLayer
// Generated by Enterprise Architect
// Created on:      15-二月-2012 17:33:34
// Original author: LuXianli
// // // // // // // // ///////////////////////////////////////////
package com.raytoon.cannonfodder.puremvc.view.ui.toolsLayer.element {
	import com.raytoon.cannonfodder.puremvc.view.ui.soundLayer.SoundLayer;
	import com.raytoon.cannonfodder.tools.utils.GlobalVariable;
	import com.raytoon.cannonfodder.tools.utils.SoundName;
	import com.raytoon.cannonfodder.tools.utils.UIState;
	import com.raytoon.cannonfodder.tools.utils.UICommand;
	import com.raytoon.cannonfodder.tools.utils.UICreate;
	import com.raytoon.cannonfodder.tools.utils.UIName;
	import com.raytoon.cannonfodder.tools.utils.UIXML;
	import com.raytoon.cannonfodder.tools.xml.XMLSource;
	import flash.display.MovieClip;

	import flash.display.DisplayObject;
	import flash.display.Sprite;
	import flash.events.MouseEvent;

	/**
	 * @author LuXianli
	 * @version 1.0
	 * @created 15-二月-2012 17:33:34
	 */
	public class LevelLayer extends Sprite {
		public function LevelLayer() {
		}

		private var _userLevel : int = 1;
		private var _levelPanel : Object;
		private var _state : Object = UIState.UPGRADE;
		private var _dataObj : Object;
		private var _iconWidth:int = 75;
		private var _upLevelMovie:MovieClip;
		/**
		 * 显示当前等级用户获得
		 * @param	userLevel
		 */
		public function showLevel(levelClassName : String, userLevel : int = 1) : void {
			_userLevel = userLevel;
			var _mClass : Class = UICommand.getClass(levelClassName);
			_levelPanel = new _mClass();
			addChild(_levelPanel as DisplayObject);
			_levelPanel.x = (GlobalVariable.STAGE_WIDTH - _levelPanel.width) / 2;
			_levelPanel.y = (GlobalVariable.STAGE_HEIGHT - _levelPanel.height) / 2;
			_mClass = null;

			_levelPanel["levelTitle"].text = String(XMLSource.getXMLSource("UISite.xml").levlePopup.content[0]) + String(XMLSource.getXMLSource("UISite.xml").phrase.level);
			_levelPanel["level"].text = _userLevel.toString();
			_levelPanel["close"].addEventListener(MouseEvent.CLICK, closeClickHandler);
			
			_mClass = UICommand.getClass("UpgradeMovieClip");
			_upLevelMovie = new _mClass() as MovieClip;
			_mClass = null;
			addChild(_upLevelMovie);
			
			SoundLayer.getInstance().playSound(SoundName.SOUND_LEVEL_UP);
			
			showReward();
			
		}

		private function closeClickHandler(event : MouseEvent) : void {
			UICommand.popupEvent(this, _levelPanel["close"], "close");
			UICommand.t.realMoney += uint(_ring);
			UICommand.t.capNum += uint(_cap);
		}
		private var _cap:int = 0;
		private var _ring:int = 0;
		/**
		 * 显示获得奖励
		 */
		private function showReward() : void {
			var _rewardArr : Array = formatStringToArray(String(XMLSource.getXMLSource("LevelInfo.xml").level.(@grade == _userLevel).levelReward));
			var _iocnX : int = 0;
			_levelPanel["title1"].text = String(XMLSource.getXMLSource("UISite.xml").levlePopup.content[1]);
			for (var i : int = 0; i < _rewardArr[0].length; i++ ) {
				var _rewardXmlList : XMLList;
				switch(String(_rewardArr[0][i])) {
					case "e":
						_rewardXmlList = XMLSource.getXMLSource("Equipment.xml").equipCategory.equip.(@id == int(_rewardArr[1][i]));
						addIcon("levelRewardPanel", String(_rewardXmlList.name), String(_rewardXmlList.langName), _iocnX, String(_rewardArr[2][i]));
						break;
					case "g":
						_rewardXmlList = XMLSource.getXMLSource("GemSkills.xml").gem.(@id == int(_rewardArr[1][i]));
						addIcon("levelRewardPanel", String(_rewardXmlList.name), String(_rewardXmlList.langName), _iocnX, String(_rewardArr[2][i]));
						break;
					case "p":
						_rewardXmlList = XMLSource.getXMLSource("Props.xml").prop.(@id == int(_rewardArr[1][i]));
						addIcon("levelRewardPanel", String(_rewardXmlList.name), String(_rewardXmlList.langName), _iocnX, String(_rewardArr[2][i]));
						break;
					case "m":
						_rewardXmlList = XMLSource.getXMLSource("Materials.xml").material.(@id == int(_rewardArr[1][i]));
						addIcon("levelRewardPanel", String(_rewardXmlList.name), String(_rewardXmlList.langName), _iocnX, String(_rewardArr[2][i]));
						break;
						
					case "r":
						addIcon("levelRewardPanel", "LevelRewardMoney", "获得拉环", _iocnX, String(_rewardArr[2][i]));
						_ring = int(_rewardArr[2][i]);
						break;
						
					case "c":
						addIcon("levelRewardPanel", "LevelRewardCap", "获得瓶盖", _iocnX, String(_rewardArr[2][i]));
						_cap = int(_rewardArr[2][i]);
						break;
				}
				
				_iocnX += _iconWidth;
			}
			addIcon("levelRewardPanel", "LevelRewardJunLing", "军令加满", _iocnX);
			showWarfare();
			
		}
		

		/**
		 * 显示获得新战力（开启的新科技）
		 */
		private function showWarfare() : void {
			var _sXmlList : XMLList = XMLSource.getXMLSource("SoldierTechTree.xml").tech.techTree;
			var _iconX : int = 0;
			var _upPanelFlag:Boolean = false;
			for (var i : int = 0; i < _sXmlList.length(); i++ ) {
				if (int(_sXmlList[i].userLevel) == _userLevel) {
					
					addIcon("levelWarfarePanel", String(_sXmlList[i].iconName), String(XMLSource.getXMLSource("SoldierInfo.xml").soldier.(@id == int(_sXmlList[i].enableTech)).langName), _iconX);
					_iconX += _iconWidth;
					_upPanelFlag = true;
				}
			}

			var _tXmlList : XMLList = XMLSource.getXMLSource("TowerTechTree.xml").tech.techTree;

			for (var j : int = 0; j < _tXmlList.length(); j++ ) {
				if (int(_tXmlList[j].userLevel) == _userLevel) {
					
					addIcon("levelWarfarePanel", String(_tXmlList[j].iconName), String(XMLSource.getXMLSource("TowerInfo.xml").towerType.tower.(@id == int(_tXmlList[j].enableTech)).langName), _iconX);
					
					_iconX += _iconWidth;
					_upPanelFlag = true;
				}
			}

			if (!_upPanelFlag) {
				_levelPanel["title2"].visible = false;
				_levelPanel["levelWarfarePanel"].visible = false;
				_levelPanel["middleLine"].visible = false;
				_levelPanel["bottomLine"].visible = false;
				_levelPanel["bottomLine"].y = _levelPanel["middleLine"].y;
				_levelPanel["title3"].y = _levelPanel["title2"].y;
				_levelPanel["levelUnLockPanel"].y = _levelPanel["levelWarfarePanel"].y;
				_levelPanel.bg.height -= (_iconWidth - 15) * 2;
				_levelPanel["close"].y -= (_iconWidth - 15) * 2;
				_levelPanel.y = (GlobalVariable.STAGE_HEIGHT - _levelPanel.height) / 2;
			} else {
				_levelPanel["title2"].text = String(XMLSource.getXMLSource("UISite.xml").levlePopup.content[2]);
			}
			
			showButton();
		}

		/**
		 * 显示主城新开启的按钮
		 */
		private function showButton() : void {
			var _btnXmlList : XMLList = XMLSource.getXMLSource("LevelInfo.xml").level.(@grade == _userLevel).enableBTN;

			if (_btnXmlList) {
				
				_levelPanel["title3"].text = String(XMLSource.getXMLSource("UISite.xml").levlePopup.content[3]);
				var _iconX : int = 0;
				for (var i : int = 0; i < _btnXmlList.btn.length(); i++ ) {
					
					addIcon("levelUnLockPanel", String(_btnXmlList.btn[i].iconName), String(_btnXmlList.btn[i].info), _iconX);
					
					_iconX += _iconWidth;
				}
				
				if (_iconX == 0) {
					
					_levelPanel["bottomLine"].visible = false;
					_levelPanel["title3"].visible = false;
					
					_levelPanel.bg.height -= (_iconWidth - 15) * 2;
					_levelPanel["close"].y -= (_iconWidth - 15) * 2;
					_levelPanel.y = (GlobalVariable.STAGE_HEIGHT - _levelPanel.height) / 2;
				}else {
					_levelPanel["bottomLine"].visible = true;
				}
			} else {
				_levelPanel["bottomLine"].visible = false;
				_levelPanel["title3"].visible = false;
				
				_levelPanel.bg.height -= (_iconWidth - 15) * 2;
				_levelPanel["close"].y -= (_iconWidth - 15) * 2;
				_levelPanel.y = (GlobalVariable.STAGE_HEIGHT - _levelPanel.height) / 2;
			}
		}

		/**
		 * 将字符串处理成数组
		 * @param	str  二维数组字符串
		 * @return
		 */
		private function formatStringToArray(str : String) : Array {
			var a : Array = str.split("||");
			var b : Array = new Array();
			for (var i : int = 0; i < a.length; i++ ) {
				b.push(String(a[i]).split(","));
			}

			return b;
		}
		/**
		 * 向面板上添加图标
		 * @param	panelName
		 * @param	name
		 * @param	langName
		 * @param	iconX
		 * @param	numTxt
		 */
		private function addIcon(panelName:String,name:String,langName:String,iconX:Number,numTxt:String = null):void {
			
			var _mClass : Class;
			var _mObj : Object;
			_mClass = UICommand.getClass("com.paohui.ui.popup.UserLevelIcon");
			_mObj = new _mClass();
			_levelPanel[panelName].addChild(_mObj as DisplayObject);
			_levelPanel[panelName].scaleX = 1;
			_levelPanel[panelName].scaleY = 1;
			_mClass = null;
			_mObj.x = iconX;
			_mObj.scaleX = 1;
			_mObj.scaleY = 1;
			_mObj["iconTxt"].text = langName;
			_mObj["iconTxt"].y = 50;
			if (numTxt) {
				_mObj["iconNumTxt"].text = "x" + numTxt;
				_mObj["iconNumTxt"].x -= 7;
			}else {
				_mObj["iconNumTxt"].visible = false;
			}
			_mClass = UICommand.getClass(name);
			var _eObj : Object = new _mClass();
			_mObj["iconPanel"].addChild(_eObj as DisplayObject);
			_mObj["iconPanel"].scaleX = 1;
			_mObj["iconPanel"].scaleY = 1;
			_mClass = null;
			_levelPanel[panelName].x = (_levelPanel.width - _levelPanel[panelName].width) / 2 + 7;
		}
		/**
		 * 清除面板
		 */
		public function clear() : void {
			_cap = 0;
			_ring = 0;
		}

		public function get state() : Object {
			return _state;
		}

		public function set state(state : Object) : void {
			_state = state;
		}

		public function get dataObj() : Object {
			return _dataObj;
		}

		public function set dataObj(dataObj : Object) : void {
			_dataObj = dataObj;
		}
	}
	// end LevelLayer
}