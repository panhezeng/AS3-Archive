///////////////////////////////////////////////////////////
//  BulletSputtering.as
//  Macromedia ActionScript Implementation of the Class BulletSputtering
//  Generated by Enterprise Architect
//  Created on:      19-七月-2011 10:44:59
//  Original author: LuXianli
///////////////////////////////////////////////////////////

package com.raytoon.cannonfodder.puremvc.view.ui.optionMainLayer.element.bullet
{
	import com.raytoon.cannonfodder.puremvc.view.ui.optionMainLayer.element.Element;
	import com.raytoon.cannonfodder.puremvc.view.ui.optionMainLayer.element.Towers;
	import com.raytoon.cannonfodder.puremvc.view.ui.optionMainLayer.OptionMainLayer;
	import com.raytoon.cannonfodder.puremvc.view.ui.soundLayer.SoundLayer;
	import com.raytoon.cannonfodder.puremvc.view.ui.UIMain;
	import com.raytoon.cannonfodder.tools.effects.BlitPlayer;
	import com.raytoon.cannonfodder.tools.utils.GlobalVariable;
	import flash.display.Bitmap;
	import flash.display.BitmapData;
	import flash.display.MovieClip;
	import flash.geom.Point;
	import flash.system.ApplicationDomain;
	/**
	 * @author LuXianli
	 * @version 1.0
	 * @created 19-七月-2011 10:44:59
	 * 溅射攻击
	 */
	public class BulletSputtering extends Element
	{
		//子弹射击单位
		private var _shooter:Element;
		//单位发出子弹速度
		private var _bSpeed:int = 15;
		public function set bSpeed(value:int):void {
			_bSpeed = value;
		}
		public function get bSpeed():int {
			return _bSpeed;
		}
		//子弹 X 轴 分速度
		private var _xSpeed:Number;
		//子弹 Y 轴 分速度
		private var _ySpeed:Number;
		
		private var player:BlitPlayer;
		private var _bulletMovie:MovieClip;
		public function BulletSputtering(from:Element, to:Element, pngName:String = "SputteringBullet") {
			super();
			row = 20;
			_shooter = from;
			target = to;
			attack = from.attack;
			x = from.x;
			y = from.y;
			
			var _pngClass:Class = ApplicationDomain.currentDomain.getDefinition(pngName) as Class ;
			_bulletMovie = new _pngClass() as MovieClip;
			_bulletMovie.gotoAndStop(1);
			addChild(_bulletMovie);
		}
		/**
		 * 清空子弹
		 */
		override public function clear():void 
		{
			
		}
		
		private var _bAngle:Number;
		private var _hurtSum:int = 0;
		/**
		 * 重新渲染单位
		 */
		override public function rendering():void 
		{
			
			//子弹位置重定向
			if (running) {
				if ((UIMain.getInstance(OptionMainLayer.NAME) as OptionMainLayer).getTargetIndex(target) != -1) {
					
					//实时计算射击目标的 射击角度
					_bAngle = Math.atan2(target.position.y - position.y, target.position.x - position.x);
					//设定子弹 X ，Y 分速度
					
					_bulletMovie.rotation = _bAngle/Math.PI*180;
					_xSpeed = Math.round(_bSpeed * Math.cos(_bAngle));
					_ySpeed = Math.round(_bSpeed * Math.sin(_bAngle));
				}
				checkHurt();
				x += _xSpeed;
				y += _ySpeed;
			}else {
				if (target) {
					x = target.position.x;
					y = target.position.y;
				}
				if(_hurtSum == 0)
					showHurtMovie();
				_hurtSum ++;
				
			}
			super.rendering();
		}
		/**
		 * 碰撞检测，子弹是否击中单位
		 */
		private function checkHurt():void {
			
			if (this.hitTestObject(target)) {
				running = false;
			}
		}
		
		private function showHurtMovie():void {
			
			_bulletMovie.gotoAndStop(2);
			
			target.downHp(attack);
			//子弹击中目标后溅射敌方
			sputteringHurt(target.adType, attack, GlobalVariable.RECT_WIDTH * 1.5);
			
			attack = 0;
		}
		private var hurtArr:Array = [];
		private var _sputterPlayer:BlitPlayer;
		/**
		 * 检查溅射伤害
		 */
		private function sputteringHurt(hurtType:String,hurtNum:Number,hurtLen:Number):void {
			
			
			(_bulletMovie["bullet_" + _bulletMovie.currentFrame] as MovieClip).addFrameScript((_bulletMovie["bullet_" + _bulletMovie.currentFrame] as MovieClip).totalFrames - 1, removeThis );
			
			if (hurtType == Element.ATTACK)
				hurtArr = (UIMain.getInstance(OptionMainLayer.NAME) as OptionMainLayer).attackArr;
			else
				hurtArr = (UIMain.getInstance(OptionMainLayer.NAME) as OptionMainLayer).towerArr;
			
			for each(var element:Element in hurtArr) {
				if (element.elementType == Towers.ORGAN_TOWER || element.elementType == Towers.OBSTACLE_TOWER || element == target) continue;
				if (Point.distance(element.position, position) <= hurtLen) {
					
					element.downHp(hurtNum);
					(UIMain.getInstance(SoundLayer.NAME) as SoundLayer).playSound(element.attackedSound);
				}
			}	
			target = null;
			hurtArr = null;
		}
		
	}//end BulletSputtering

}