// // // // // // // // // // // // // // // // // // // // // // // // // // ///////
// SoldierTechTree.as
// Macromedia ActionScript Implementation of the Class SoldierTechTree
// Generated by Enterprise Architect
// Created on:      14-九月-2011 16:39:36
// Original author: LuXianli
// // // // // // // // // // // // // // // // // // // // // // // // // // ///////
package com.raytoon.cannonfodder.puremvc.view.ui.techTreeLayer {
	import com.raytoon.cannonfodder.puremvc.ApplicationFacade;
	import com.raytoon.cannonfodder.puremvc.model.vo.CannonFodderVO;
	import com.raytoon.cannonfodder.puremvc.view.mediator.techTreeLayerMediator.TechTreeLayerMediator;
	import com.raytoon.cannonfodder.puremvc.view.ui.UIMain;
	import com.raytoon.cannonfodder.puremvc.view.ui.buffLayer.BuffLayer;
	import com.raytoon.cannonfodder.puremvc.view.ui.optionMainLayer.element.Element;
	import com.raytoon.cannonfodder.puremvc.view.ui.techTreeLayer.techTree.TechEnable;
	import com.raytoon.cannonfodder.puremvc.view.ui.techTreeLayer.techTree.TechEnableLock;
	import com.raytoon.cannonfodder.puremvc.view.ui.techTreeLayer.techTree.TechRunTime;
	import com.raytoon.cannonfodder.tools.utils.GlobalVariable;
	import com.raytoon.cannonfodder.tools.utils.NotificationNameList;
	import com.raytoon.cannonfodder.tools.utils.NumberFont;
	import com.raytoon.cannonfodder.tools.utils.UICommand;
	import com.raytoon.cannonfodder.tools.utils.UICreate;
	import com.raytoon.cannonfodder.tools.utils.UIName;
	import com.raytoon.cannonfodder.tools.utils.UITransition;
	import com.raytoon.cannonfodder.tools.utils.UIXML;
	import com.raytoon.cannonfodder.tools.xml.XMLSource;
	
	import flash.display.CapsStyle;
	import flash.display.DisplayObject;
	import flash.display.JointStyle;
	import flash.display.LineScaleMode;
	import flash.display.MovieClip;
	import flash.display.Shape;
	import flash.display.Sprite;
	import flash.events.MouseEvent;
	import flash.filters.ColorMatrixFilter;
	import flash.filters.GlowFilter;
	import flash.geom.Point;

	/**
	 * @author LuXianli
	 * @version 1.0
	 * @created 14-九月-2011 16:39:36
	 */
	public class SoldierTechTree extends Sprite {
		private var _lineLayer : Sprite;
		// = new Sprite();
		private var _iconLayer : Sprite = new Sprite();

		public function SoldierTechTree() {
		}

		// 士兵科技信息数组
		private var _techInfoArr : Array = new Array();
		// 士兵科技显示数组
		private var _techArr : Array = new Array();

		public function get techArr() : Array {
			return _techArr;
		}

		private var _defaultMc : MovieClip;

		/**
		 * 显示士兵科技树
		 */
		public function showTechTree() : void {
			
			if (UICommand.t.gameGuideData[0] == 1) {
				if (UICommand.t.userData[3][3] == 6002) {
					TechTreeLayer.techRunTimeFlag = true;
				} else if (UICommand.t.userData[3][3] == 6004) {
					TechTreeLayer.techRunTimeFlag = true;
				}
			}
			
			if (!_lineLayer) {
				var _mClass : Class = UICommand.getClass("SoldierTechLine");
				_lineLayer = new _mClass() as Sprite;
				_mClass = null;
				addChild(_lineLayer);
				_lineLayer.x = GlobalVariable.TECH_PIC_WIDTH / 2;
				_lineLayer.y = GlobalVariable.TECH_PIC_HEIGHT + 10;
			} else {
				addChild(_lineLayer);
			}
			addChild(_iconLayer);
			_iconLayer.y = 10;
			_techInfoArr = CannonFodderVO.techTreeInfo.soldierTech as Array;
			removeTech();
			for each (var obj:Object in _techInfoArr) {
				addTech(obj);
				var _nextTech : Array = String(XMLSource.getXMLSource("SoldierTechTree.xml").tech.techTree.(@id == obj.id).nextTech).split("||");
				if (_nextTech[0] == 0) continue;
				for each (var nextTeach:String in _nextTech) {
					var nextTechArr : Array = nextTeach.split(",");
					if (nextTechArr[0] == 1) {
						addTech({"type":"main", "id":nextTechArr[1], "flag":-1, "startTime":0, "level":0});
					} else {
						addTech({"type":"branch", "id":nextTechArr[1], "flag":-1, "startTime":0, "level":0});
					}
				}
			}
			// 显示下坠的未知科技 问号图标
			// for each (var techMc:MovieClip in _techArr) {
			// if (techMc.flag != 0) continue;
			// var _nextMcTech : Array = String(XMLSource.getXMLSource("SoldierTechTree.xml").tech.techTree.(@id == techMc.id).nextTech).split("||");
			// if (_nextMcTech[0] == 0) continue;
			// for each (var nextMcTeach:String in _nextMcTech) {
			// var nextMcTechArr : Array = nextMcTeach.split(",");
			// if (nextMcTechArr[0] == 1) {
			// addTech({"type":"main", "id":nextMcTechArr[1], "flag":-1, "startTime":0, "level":0});
			// } else {
			// addTech({"type":"branch", "id":nextMcTechArr[1], "flag":-1, "startTime":0, "level":0});
			// }
			// }
			// }
			// 科技之间画线连接
			// for each (var lineMC:MovieClip in _techArr) {
			// var lineSumArr : Array = lineMC.nextTechArray;
			// for each (var linePoint:Point in lineSumArr) {
			// drawTechLine(lineMC.position, linePoint);
			// }
			// }

			for each (var dMc:MovieClip in _techArr) {
				
				if (dMc.flag == -1) continue;
				if (!_defaultMc) {
					_defaultMc = dMc;
				} else {
					if (_defaultMc.y > dMc.y) {
						_defaultMc = dMc
					}
				}
			}

			if (_defaultMc) {
				
				UITransition.techInfoSwitch();
				UICreate.getTechInfo(TechTreeLayer.SOLDIER_TECH_TREE, _defaultMc);
				_defaultMc.filters = [new GlowFilter(0xFFFF00, 1, 6, 6, 2, 2)];
				// 黄色
				if (_defaultMc.flag == 2) _defaultMc.timeTxtFlag = true;
				_defaultMc = null;
			}

			if (UICommand.t.userData[3][3] != null) {
				// var list : Object = (UICommand.t.ui[UIName.UI_TECH] as Object).list;
				// list.dataType = TechTreeLayer.SOLDIER_TECH_TREE;
				// var _point : Point = new Point(list.position.x, list.position.y);
				var _soldierObj : MovieClip;
				var xmlList : XMLList = UIXML.soldierTechTreeXML.tech.techTree;
				if (UICommand.t.gameGuideData[0] == 1) {
					if (UICommand.t.userData[3][3] == 6002) {
						_soldierObj = showTech(4203);
						_soldierObj.dataX = Number(xmlList.(@id == 4203).guideX[0]);
						_soldierObj.dataY = Number(xmlList.(@id == 4203).guideY[0]);
					} else if (UICommand.t.userData[3][3] == 6004) {
						_soldierObj = showTech(4101);
						_soldierObj.dataX = Number(xmlList.(@id == 4101).guideX[0]);
						_soldierObj.dataY = Number(xmlList.(@id == 4101).guideY[0]);
					}
				}
				if (_soldierObj != null) {
					var string : String = String(UIXML.gameGuideXML.guide.(@id == UICommand.t.userData[3][3]).tip.content[1]);
					_soldierObj.name = UIName.E_GUIDE + UIName.XML_SOLDIER;
					UICreate.addGuideHighlight(_soldierObj, string);
				}
			}
		}
		
		
		/**
		 * 显示正在研发的科技
		 */
		public function showTechRunTime():void {
			
			if(TechTreeLayer.techRunTimeFlag)return;
			for each(var obj:Object in _techArr) {
				
				_iconLayer.addChild(obj as DisplayObject);
			}
			TechTreeLayer.techRunTimeFlag = true;
		}

		private function getTechNewMc(obj : Object) : MovieClip {
			var _techXmlList : XMLList = XMLSource.getXMLSource("SoldierTechTree.xml").tech.techTree.(@id == obj.id);
			var _techLayer : Number = Number(_techXmlList.layer);
			var _techIconName : String = String(_techXmlList.iconName);
			var _techClass : Class;
			var _techMc : MovieClip;
			var _techIconMc : MovieClip;

			if (obj.flag == -1) {
				// 不可用未激活状态
				_techMc = new TechEnableLock("TechIcon");
				_techMc.buttonMode = false;
			} else if (obj.flag == 0) {
				// 不可用未激活状态
				_techMc = new TechEnableLock(_techIconName, "TechLockIcon");
				_techMc.buttonMode = true;
				_techMc.mouseChildren = false;
			} else if (obj.flag == 1) {
				// 条件满足可以研发
				_techMc = new TechEnableLock(_techIconName, "TechLockIconMovie");
				_techMc.buttonMode = true;
				_techMc.mouseChildren = false;
			} else if (obj.flag == 2) {
				// 正在研发中
				_techMc = new TechRunTime("SoldierTechTree.xml", obj.type, obj.id, obj.flag, obj.startTime, obj.level);
				_techMc.buttonMode = true;
				_techMc.mouseChildren = false;
			} else if (obj.flag == 3) {
				// 科技可以使用
				var _techLevel : int = obj.level + _additionLevel <= 10 ? obj.level + _additionLevel : 10;
				_techMc = new TechEnable(_techIconName, _techLevel, _additionLevel,"SoldierTechTree.xml", obj.type, obj.id);
				if (int(_techXmlList.enableTech) > 0) {
					_techMc.buttonMode = true;
					_techMc.mouseChildren = false;
				} else {
					_techMc.mouseEnabled = false;
				}
			}
			var list : Object = (UICommand.t.ui[UIName.UI_TECH] as Object).list;
			list.dataType = TechTreeLayer.SOLDIER_TECH_TREE;
			var _point : Point = new Point(list.position.x, list.position.y);

			_techMc.x = obj.dataPoint.x + _point.x;

			_techMc.y = obj.dataPoint.y + _point.y + GlobalVariable.RECT_HEIGHT - 3;
			_techMc.position = new Point(_techMc.x + GlobalVariable.TECH_PIC_WIDTH / 2, _techMc.y + GlobalVariable.TECH_PIC_HEIGHT / 2);
			_techMc.nextTechArray = getNextTechPoint(String(XMLSource.getXMLSource("SoldierTechTree.xml").tech.techTree.(@id == obj.id).nextTech).split("||"));
			_techMc.id = obj.id;
			_techMc.type = obj.type;
			_techMc.flag = obj.flag;
			_techMc.startTime = obj.startTime;
			_techMc.level = obj.level;

			return _techMc;
		}

		/**
		 * 计算下一个科技的图标中心点
		 * @param	arr
		 * @return
		 */
		private function getNextTechPoint(arr : Array) : Array {
			var _pointArr : Array = new Array();
			var _techXmlList : XMLList = XMLSource.getXMLSource("SoldierTechTree.xml").tech.techTree;
			for each (var str:String in arr) {
				var _strArr : Array = str.split(",");
				var _pointX : Number = Number(_techXmlList.(@id == _strArr[1]).site) * GlobalVariable.TECH_SITE_WIDTH + GlobalVariable.TECH_MAIN_X + GlobalVariable.TECH_PIC_WIDTH / 2;
				var _pointY : Number = Number(_techXmlList.(@id == _strArr[1]).layer) * GlobalVariable.TECH_LAYER_HEIGHT + GlobalVariable.TECH_PIC_HEIGHT / 2;
				_pointArr.push(new Point(_pointX, _pointY));
				_strArr = null;
			}
			_techXmlList = null;
			return _pointArr;
		}

		private var _lineArr : Array = [];

		/**
		 * 科技之间画线
		 * @param	startPoint
		 * @param	endPoint
		 */
		private function drawTechLine(startPoint : Point, endPoint : Point) : void {
			if (startPoint.y > endPoint.y) return;
			var _shape : Shape = new Shape();
			_shape.graphics.lineStyle(8, 0xB39847, 1, false, LineScaleMode.VERTICAL, CapsStyle.NONE, JointStyle.MITER, 8);
			_shape.graphics.moveTo(startPoint.x, startPoint.y);
			if (startPoint.x == endPoint.x || startPoint.y == endPoint.y) {
				_shape.graphics.lineTo(endPoint.x, endPoint.y);
			} else {
				_shape.graphics.lineTo(startPoint.x, startPoint.y + GlobalVariable.TECH_LAYER_HEIGHT / 2);
				_shape.graphics.lineTo(endPoint.x, endPoint.y - GlobalVariable.TECH_LAYER_HEIGHT / 2);
				_shape.graphics.lineTo(endPoint.x, endPoint.y);
			}
			_shape.graphics.endFill();
			_lineLayer.addChild(_shape);
			_lineArr.push(_shape);
			_shape = null;
			startPoint = null;
			endPoint = null;
		}

		/**
		 * 判断此科技是否存在于科技信息中
		 * @param	id 科技编号
		 * @return
		 */
		private function showTechInfo(id : int) : Object {
			for each (var obj:Object in _techInfoArr) {
				if (obj.id == id) return obj;
			}

			return null;
		}

		/**
		 * 判断此科技是否加入显示列表
		 * @param	id 科技编号
		 * @return
		 */
		private function showTech(id : int) : MovieClip {
			for each (var techMc:MovieClip in _techArr) {
				if (techMc.id == id)
					return techMc;
			}

			return null;
		}

		/**
		 * 判断是否更改当前显示科技树
		 * @param	obj {"type":"main","id":4101,"flag":1,"startTime":123,"level":1}
		 */
		public function addTech(obj : Object) : void {
			if (showTech(obj.id) != null) {
				if (showTechInfo(obj.id) != null) {
					//if (showTech(obj.id).flag != showTechInfo(obj.id).flag) {
						removeTech(showTech(obj.id));
						showThisTech(obj);
					//}
				}
			} else {
				showThisTech(obj);
			}
		}

		private var _additionLevel : int = 0;

		/**
		 * 当前科技添加到显示科技树
		 * @param	obj {"type":"main","id":4101,"flag":1,"startTime":123,"level":1}
		 */
		private function showThisTech(obj : Object) : void {
			// var _additionLevel:int = 0;
			var _buffID : int = (UIMain.getInstance(BuffLayer.NAME) as BuffLayer).checkBuffView("c") != 0 ? (UIMain.getInstance(BuffLayer.NAME) as BuffLayer).checkBuffView("c") : 0;
			if (_buffID != 0) {
				_additionLevel = int(XMLSource.getXMLSource("Props.xml").prop.(@id == _buffID).buffLevel);
			}
			var _techXmlList : XMLList = XMLSource.getXMLSource("SoldierTechTree.xml").tech.techTree.(@id == obj.id);
			var _techLayer : Number = Number(_techXmlList.layer);
			var _techIconName : String = String(_techXmlList.iconName);
			var _techClass : Class;
			var _techMc : MovieClip;
			var _techIconMc : MovieClip;

			if (obj.flag == -1) {
				// 不可用未激活状态
				_techMc = new TechEnableLock("TechIcon");
				_techMc.name = "TechIcon";
				_techMc.buttonMode = true;
				_techMc.mouseChildren = false;
			} else if (obj.flag == 0) {
				// 不可用未激活状态
				_techMc = new TechEnableLock(_techIconName, "TechLockIcon");
				_techMc.name = _techIconName;
				_techMc.buttonMode = true;
				_techMc.mouseChildren = false;
			} else if (obj.flag == 1) {
				// 条件满足可以研发
				_techMc = new TechEnableLock(_techIconName, "TechLockIconMovie");
				_techMc.name = _techIconName;
				_techMc.buttonMode = true;
				_techMc.mouseChildren = false;
			} else if (obj.flag == 2) {
				// 正在研发中
				_techMc = new TechRunTime("SoldierTechTree.xml", obj.type, obj.id, obj.flag, obj.startTime, obj.level);
				_techMc.name = _techIconName;
				_techMc.buttonMode = true;
				_techMc.mouseChildren = false;
			} else if (obj.flag == 3) {
				// 科技可以使用
				var _techLevel : int = obj.level + _additionLevel <= 10 ? obj.level + _additionLevel : 10;
				_techMc = new TechEnable(_techIconName, _techLevel, _additionLevel,"SoldierTechTree.xml", obj.type, obj.id);
				_techMc.name = _techIconName;
				if (int(_techXmlList.enableTech) > 0) {
					_techMc.buttonMode = true;
					_techMc.mouseChildren = false;
				} else {
					_techMc.mouseEnabled = false;
				}
			}

			var _techSite : Number = Number(XMLSource.getXMLSource("SoldierTechTree.xml").tech.techTree.(@id == obj.id).site);
			_techMc.x = GlobalVariable.TECH_MAIN_X + GlobalVariable.TECH_SITE_WIDTH * _techSite;

			_techMc.y = GlobalVariable.TECH_LAYER_HEIGHT * _techLayer;
			if(TechTreeLayer.techRunTimeFlag){
				_iconLayer.addChild(_techMc);
			}
			_techMc.position = new Point(_techMc.x + GlobalVariable.TECH_PIC_WIDTH / 2, _techMc.y + GlobalVariable.TECH_PIC_HEIGHT / 2);
			_techMc.nextTechArray = getNextTechPoint(String(XMLSource.getXMLSource("SoldierTechTree.xml").tech.techTree.(@id == obj.id).nextTech).split("||"));
			//if (obj.flag != 0 && obj.flag != -1) _techMc.addEventListener(MouseEvent.CLICK, techClickHandler);
			_techMc.dataPoint = _techMc.localToGlobal(new Point(0, 0));
			_techMc.id = obj.id;
			_techMc.type = obj.type;
			_techMc.flag = obj.flag;
			_techMc.startTime = obj.startTime;
			_techMc.level = obj.level;
			_techArr.push(_techMc);
			_techXmlList = null;
		}

		/**
		 * 点击科技后  处理函数
		 * @param	event
		 */
		private function techClickHandler(event : MouseEvent) : void {
			var _nowTech : MovieClip = event.currentTarget as MovieClip;
			_nowTech.mouseEnabled = false;
			_nowTech.type;
			_nowTech.id;
			_nowTech.startTime;
			_nowTech.level;
			_nowTech.filters = [new GlowFilter(0xFFFF00, 1, 6, 6, 2, 2)];
			// 黄色
			if (_nowTech.flag == 2) {
				_nowTech.timeTxtFlag = true;
			}

			for each (var tech:MovieClip in _techArr) {
				if (tech.id == _nowTech.id || int(tech.flag) == 0 || int(tech.flag) == -1) continue;
				tech.filters = [];
				tech.mouseEnabled = true;
				if (tech.flag == 2) tech.timeTxtFlag = false;
			}
		}
		/**
		 * 改变图标选中状态
		 * @param	obj
		 */
		public function changeSelected(obj:Object):void {
			
			var _nowTech : MovieClip = obj as MovieClip;
			if (_nowTech.flag == 2) {
				_nowTech.timeTxtFlag = true;
			}
			_nowTech.filters = [new GlowFilter(0xFFFF00, 1, 6, 6, 2, 2)];
			_nowTech.mouseEnabled = false;
			for each (var tech:MovieClip in _techArr) {
				if (tech.id == _nowTech.id) continue;
				tech.filters = [];
				tech.mouseEnabled = true;
				if (tech.flag == 2) tech.timeTxtFlag = false;
			}
		}
		
		/**
		 * 移除指定显示科技
		 * @param	tech
		 */
		public function removeTech(tech : MovieClip = null) : void {
			if (!tech) {
				for each (var techMc:MovieClip in _techArr) {
					if (_iconLayer.contains(techMc)) {
						(techMc as Object).clear();
						_iconLayer.removeChild(techMc);
					}
					techMc = null;
				}
				_techArr = [];

				for each (var lineShape:Shape in _lineArr) {
					if (_lineLayer.contains(lineShape))
						_lineLayer.removeChild(lineShape);
					lineShape = null;
				}
				_lineArr = [];
			} else {
				var _index : int = _techArr.indexOf(tech);
				(tech as Object).clear();
				if(_iconLayer.contains(tech))_iconLayer.removeChild(tech);
				if (_index != -1)
					_techArr.splice(_index, 1);
				tech = null;
			}
		}

		/**
		 * 更新科技树显示
		 * @param	type 科技类型  main\branch
		 * @param	id     科技编号
		 */
		public function updateTechTree(id : int) : void {
			var _techFlag : int;
			var _techLevel : int;
			var _type : String;
			for (var i : int = 0; i < _techArr.length; i++ ) {
				if (_techArr[i].id == id) {
					if (int(_techArr[i].flag) != 3) {
						_techFlag = int(_techArr[i].flag) + 1;
					} else {
						_techFlag = 2;
					}
					_techLevel = int(_techArr[i].level);
					_type = String(_techArr[i].type);
					_iconLayer.removeChild(_techArr[i] as MovieClip);
					_techArr.splice(i, 1);
					addTech({"type":_type, "id":id, "flag":_techFlag, "startTime":TechTreeLayer.SERVER_NOW_TIME, "level":_techLevel});
					if (_techFlag == 2) {
						showTech(id).timeTxtFlag = true;
					}
					
					var voArr:Array = CannonFodderVO.techTreeInfo.soldierTech as Array;
					
					for (var m:int = 0; m < voArr.length; m ++){
						
						if(voArr[m].id == id){
							
							voArr[m].type = _type;
							voArr[m].id = id;
							voArr[m].flag = _techFlag;
							voArr[m].startTime = TechTreeLayer.SERVER_NOW_TIME;
							voArr[m].level = _techLevel;
						}
					}
					
					CannonFodderVO.techTreeInfo.soldierTech = voArr;
					updateTechState();
					return;
				}
			}

			addTech( { "type":_type, "id":id, "flag":1, "startTime":TechTreeLayer.SERVER_NOW_TIME, "level":0 } );
			updateTechState();
		}
		
		private function updateTechState():void {
			
			for each (var obj:Object in _techArr) {
				
				if (obj.flag == 3) obj.update();
			}
		}

		/**
		 * 激活科技
		 * @param	obj  {"type":"main","id":4101,"flag":1,"startTime":123,"level":1}
		 */
		public function activationTech(obj : Object) : void {
			addTech(obj);
			var _nextTech : Array = String(XMLSource.getXMLSource("SoldierTechTree.xml").tech.techTree.(@id == obj.id).nextTech).split("||");
			for each (var nextTeach:String in _nextTech) {
				var nextTechArr : Array = nextTeach.split(",");
				if (nextTechArr[0] == 1) {
					addTech({"type":"main", "id":nextTechArr[1], "flag":0, "startTime":0, "level":0});
				} else {
					addTech({"type":"branch", "id":nextTechArr[1], "flag":0, "startTime":0, "level":0});
				}
			}
		}

		/**
		 * 查询科技数据，获取当前信息
		 * @param	id
		 * @return
		 */
		private function searchTechInfo(id : int) : Array {
			var _techInfoArr : Array = CannonFodderVO.soldierInfo.soldier as Array;
			for each (var obj:Array in _techInfoArr) {
				if (obj[0] == id)
					return obj;
			}
			return null;
		}
		
		public function clear():void {
			
			for each(var obj:Object in _techArr) {
				
				obj.clear();
			}
		}
	}
	// end SoldierTechTree
}