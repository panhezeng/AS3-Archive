///////////////////////////////////////////////////////////
//  Bullet.as
//  Macromedia ActionScript Implementation of the Class Bullet
//  Generated by Enterprise Architect
//  Created on:      16-六月-2011 17:53:56
//  Original author: LuXianli
///////////////////////////////////////////////////////////

package com.raytoon.cannonfodder.puremvc.view.ui.optionMainLayer.element.bullet
{
	import com.raytoon.cannonfodder.puremvc.view.ui.optionMainLayer.element.Hero;
	import com.raytoon.cannonfodder.puremvc.view.ui.optionMainLayer.element.Soldier;
	import com.raytoon.cannonfodder.puremvc.view.ui.optionMainLayer.element.Towers;
	import com.raytoon.cannonfodder.puremvc.view.ui.optionMainLayer.OptionMainLayer;
	import com.raytoon.cannonfodder.puremvc.view.ui.soundLayer.SoundLayer;
	import com.raytoon.cannonfodder.puremvc.view.ui.UIMain;
	import com.raytoon.cannonfodder.puremvc.view.ui.optionMainLayer.element.Element;
	import com.raytoon.cannonfodder.tools.effects.BlitPlayer;
	import flash.display.Bitmap;
	import flash.display.BitmapData;
	import flash.display.MovieClip;
	import flash.display.Sprite;
	import flash.system.ApplicationDomain;

	/**
	 * @author LuXianli
	 * @version 1.0
	 * @created 16-六月-2011 17:53:56
	 */
	public class Bullet extends Element
	{
		//子弹射击单位
		private var _shooter:Element;
		//单位发出子弹速度
		private var _bSpeed:int = 5;
		public function set bSpeed(value:int):void {
			_bSpeed = value;
		}
		public function get bSpeed():int {
			return _bSpeed;
		}
		//子弹 X 轴 分速度
		private var _xSpeed:Number;
		//子弹 Y 轴 分速度
		private var _ySpeed:Number;
		//子弹附加技能
		private var _skills:int = 0;
		public function set skills(value:int):void {
			_skills = value;
		}
		public function get skills():int {
			return _skills;
		}
		
		//private var player:BlitPlayer;
		private var _bulletMovie:MovieClip;
		public function Bullet(from:Element, to:Element, pngName:String = "CommonBullet", attackValue:int = 0, skillsValue:int = 0){
			super();
			row = 20;
			
			_shooter = from;
			target = to;
			attack = attackValue;
			_skills = skillsValue;
			
			if (_skills == 203) {
				if (from.shootSum == 4)
					attack += 10;
			}
			x = from.x;
			y = from.y;
			
			var _pngClass:Class = ApplicationDomain.currentDomain.getDefinition(pngName) as Class ;
			_bulletMovie = new _pngClass() as MovieClip;
			_bulletMovie.gotoAndStop(1);
			addChild(_bulletMovie);
		}
		/**
		 * 清空子弹
		 */
		override public function clear():void 
		{
			super.clear();
		}
		
		private var _bAngle:Number;
		/**
		 * 重新渲染单位
		 */
		override public function rendering():void 
		{
			
			//子弹位置重定向
			if (running) {
				if ((UIMain.getInstance(OptionMainLayer.NAME) as OptionMainLayer).getTargetIndex(target) != -1) {
					
					//实时计算射击目标的 射击角度
					_bAngle = Math.atan2(target.position.y- 20 - position.y, target.position.x - position.x);
					//设定子弹 X ，Y 分速度
					_bulletMovie.rotation = _bAngle/Math.PI*180;
					_xSpeed = Math.round(_bSpeed * Math.cos(_bAngle));
					_ySpeed = Math.round(_bSpeed * Math.sin(_bAngle));
				}
				x += _xSpeed;
				y += _ySpeed;
			}else {
				
				if (target) {
					x = target.position.x;
					y = target.position.y;
				}
				
				if ((_bulletMovie["bullet_2"] as MovieClip).currentFrame == (_bulletMovie["bullet_2"] as MovieClip).totalFrames) {
					(_bulletMovie["bullet_2"] as MovieClip).stop();
					removeChild(_bulletMovie);
					removeThis();
				}
			}
			//状态关 检测碰撞（子弹是否击中）
			if (target && running)
				checkHurt();
			//如果未击中并且 超出舞台 则 删除自身
			super.rendering();
		}
		/**
		 * 碰撞检测，子弹是否击中单位
		 */
		private function checkHurt():void {
			
			if (!target)
				return;
			if (this.hitTestPoint(target.position.x,target.position.y - 20)) {
				
				_bulletMovie.gotoAndStop(2);
				_bulletMovie.rotation = 0;
				running = false;
				(UIMain.getInstance(SoundLayer.NAME) as SoundLayer).playSound(target.attackedSound);
				switch(_skills) {
					
					case 201:
						if (target.lifeHP < target.mirrorHP)
							target.hurtBackHp((_shooter as Towers).skillsValue, (_shooter as Towers).skillsTime);
						target.downHp(attack);
					break;
					
					case 202:
						
						target.hurtSpeed((_shooter as Towers).skillsPercent, (_shooter as Towers).skillsTime);
						target.downHp(attack);
					break;
					
					case 204:
						var _tempHp:int = _shooter.attack - target.defense > 0 ? (_shooter.attack - target.defense) * (_shooter as Towers).skillsPercent : 0;
						_shooter.plusHp(_tempHp);
						target.downHp(attack);
					break;
					
					case 205:
						
						if (target.armor == 0) {
							_shooter.attack += (_shooter as Towers).skillsValue;
							attack += (_shooter as Towers).skillsValue;
						}
						target.downHp(attack);
					break;
					
					case 206:
						target.downLife(attack);
					break;
					
					default:
						target.downHp(attack);
					break;
				}
				
				if (target.elementSkills == 205)
					target.attack  += (target as Towers).skillsValue;
				
				attack = 0;
				//removeThis();
			}
		}

	}//end Bullet

}