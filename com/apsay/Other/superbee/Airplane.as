package com.apsay.superbee{	import com.apsay.event.PanEvent;	import com.apsay.utils.Pan;	import com.greensock.TweenLite;	import com.greensock.plugins.FramePlugin;	import com.greensock.plugins.TweenPlugin;	import flash.display.Bitmap;	import flash.display.Sprite;	import flash.events.Event;	import flash.utils.getTimer;	public class Airplane extends Sprite	{		private var dx:Number; // speed and direction		private var lastTime:int; // animation time		private var bl:int;		private var br:int;		private var plane:Bitmap;		private var explode:Explode;		public function Airplane(sw:Number, side:String, speed:Number, altitude:Number)		{			TweenPlugin.activate([FramePlugin]);			plane=new Bitmap(Pan.getBitmapData("com.apsay.superbee.Airplane" + Math.floor(Math.random() * 6 + 1)));			this.addChild(plane);			bl=-this.width;			br=sw + this.width;			if (side == "left")			{				this.x=bl; // start to the left				dx=speed; // fly left to right					//this.scaleX=-1; // reverse			}			else if (side == "right")			{				this.x=br; // start to the right				dx=-speed; // fly right to left					//this.scaleX=1; // not reverse			}			this.y=altitude + this.height; // vertical position			// set up animation			addEventListener(Event.ENTER_FRAME, _movePlane);			lastTime=getTimer();		}		private function _movePlane(event:Event):void		{			// get time passed			var timePassed:int=getTimer() - lastTime;			lastTime+=timePassed;			// move plane			var move:Number=dx * timePassed / 1000;			if (explode)			{				this.x+=move / 2;			}			else			{				this.x+=move;			}			// check to see if off screen			if ((dx < 0) && (x < bl))			{				deletePlane();			}			else if ((dx > 0) && (x > br))			{				deletePlane();			}		}		// plane hit, show explosion		public function planeHit():void		{			//removeEventListener(Event.ENTER_FRAME, _movePlane);			explode=new Explode();			explode.x=-plane.width / 4;			explode.y=-plane.height / 4;			explode.width=(plane.width + (plane.width / 2));			explode.height=(plane.height + (plane.height / 2));			this.addChild(explode);			TweenLite.to(explode, 0.6, {frame: explode.totalFrames, onComplete: _explodeTC});			var soundExplode:SoundExplode=new SoundExplode();			soundExplode.play();			//parent.dispatchEvent(new PanEvent(PanEvent.COMPLETE, true, false, [this]));			//MovieClip(parent).removePlane(this);		}		private function _explodeTC():void		{			explode=null;			deletePlane();			//plane.bitmapData.dispose();			//parent.removeChild(this);		}		// delete plane from stage and plane list		public function deletePlane():void		{			if (parent && plane)			{				if (this.hasEventListener(Event.ENTER_FRAME))					removeEventListener(Event.ENTER_FRAME, _movePlane);				parent.dispatchEvent(new PanEvent(PanEvent.COMPLETE, true, false, [this]));				//MovieClip(parent).removePlane(this);				plane.bitmapData.dispose();				parent.removeChild(this);			}		}	}}